# ======================================================================================
# DeepSearchStack - Definitive Docker Compose Configuration (Decoupled)
# ======================================================================================

# ======================================================================================
# DeepSearchStack - Definitive Docker Compose Configuration (Orchestrator UI Focus)
# ======================================================================================

volumes:
  postgres_data:
  yacy_data:
  ollama_data:
    name: deepsearch_ollama_data
  redis_data:
  chimera_db:

networks:
  deepsearch_net:
    driver: bridge
    name: deepsearch_net

services:
  # --- PROXY ---
  traefik:
    image: "traefik:v2.10"
    container_name: traefik-1
    restart: unless-stopped
    command:
      - "--configFile=/etc/traefik/config.yml"
    ports:
      - "80:80"
      - "8080:8080" # Expose Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./config/traefik/config.yml:/etc/traefik/config.yml:ro"
    networks:
      - deepsearch_net

  # --- AI SERVICES ---
  ollama-orchestrator:
    build:
      context: ../services/ollama-api-server-docker/src/api-gateway
      dockerfile: Dockerfile
    container_name: ollama-orchestrator-1
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ollama-orchestrator.rule=Host(`${TRAEFIK_API_DOMAIN}`)"
      - "traefik.http.services.ollama-orchestrator.loadbalancer.server.port=8000"
    networks:
      - deepsearch_net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ollama_data:/root/.ollama
    env_file: ../.env
    environment:
      - WORKER_IMAGE=${WORKER_IMAGE:-ollama/ollama:latest}
      - OLLAMA_DEFAULT_MODEL=${OLLAMA_DEFAULT_MODEL:-gemma:2b}
      - CHIMERA_NETWORK=deepsearch_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/instances"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 20s

  # --- USER INTERFACE ---
  chimera-frontend:
    build:
      context: ../services/ollama-api-server-docker/src/chimera-frontend
      dockerfile: Dockerfile
    container_name: chimera-frontend-1
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chimera-frontend.rule=Host(`${TRAEFIK_FRONTEND_DOMAIN}`)"
      - "traefik.http.services.chimera-frontend.loadbalancer.server.port=3000"
    networks:
      - deepsearch_net
    depends_on:
      - ollama-orchestrator
    env_file:
      - ../.env
    volumes:
      - chimera_db:/app/prisma

  # --- SEARCH BACKENDS (can be removed if not needed for this phase) ---
  yacy:
    image: yacy/yacy_search_server:latest
    container_name: yacy-1
    restart: unless-stopped
    networks:
      - deepsearch_net
    volumes:
      - yacy_data:/opt/yacy_search_server/DATA
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/api/status.json"]
      interval: 15s
      timeout: 10s
      retries: 20
      start_period: 120s

  whoogle:
    image: benbusby/whoogle-search:latest
    container_name: whoogle-1
    restart: unless-stopped
    networks:
      - deepsearch_net
    environment:
      - WHOOGLE_CONFIG_GET_ONLY=1

  searxng:
    image: searxng/searxng:latest
    container_name: searxng-1
    restart: unless-stopped
    networks:
      - deepsearch_net
    volumes:
      - ../services/searxng/settings.yml:/etc/searxng/settings.yml
    cap_drop: [ALL]
    cap_add: [CHOWN, SETGID, SETUID, DAC_OVERRIDE]


  